<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- This is needed if you want to use the @Transactional annotation -->
	<tx:annotation-driven transaction-manager="transactionManager" />


	<bean id="dataSource" class="org.h2.jdbcx.JdbcDataSource">
		<property name="URL" value="jdbc:h2:test;INIT=RUNSCRIPT FROM '~/testScripts/initiateDB.sql'" />
		<property name="user" value="sa" />
		<property name="password" value="" />
	</bean>
	

	<jdbc:initialize-database>
		<jdbc:script location="classpath*:initiateDB.sql" />
	</jdbc:initialize-database>

	<!-- <bean id="dataSource" -->
	<!-- class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->

	<!-- <property name="url" value="jdbc:postgresql://localhost:5432/postgres" 
		/> -->
	<!-- <property name="driverClassName" value="org.postgresql.Driver" /> -->
	<!-- <property name="username" value="postgres" /> -->
	<!-- <property name="password" value="postgres" /> -->
	<!-- </bean> -->

	<!-- Configure Spring's transaction manager to use a DataSource -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Configure jOOQ's ConnectionProvider to use Spring's TransactionAwareDataSourceProxy, 
		which can dynamically discover the transaction context -->
	<bean id="transactionAwareDataSource"
		class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
		<constructor-arg ref="dataSource" />
	</bean>

	<bean class="org.jooq.impl.DataSourceConnectionProvider" name="connectionProvider">
		<constructor-arg ref="transactionAwareDataSource" />
	</bean>

	<!-- Configure the DSL object, optionally overriding jOOQ Exceptions with 
		Spring Exceptions -->
	<bean id="dsl" class="org.jooq.impl.DefaultDSLContext">
		<constructor-arg ref="config" />
	</bean>


	<bean class="org.jooq.impl.DefaultConfiguration" name="config">
		<property name="connectionProvider" ref="connectionProvider" />
	</bean>

	<bean id="prodDao" class="com.dan.dao.impl.ProductDao">
		<!-- <property name="dlsContext" ref="dsl"/> -->
	</bean>
</beans>